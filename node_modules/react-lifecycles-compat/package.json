{
  "_args": [
    [
      {
        "raw": "react-lifecycles-compat@^1.0.2",
        "scope": null,
        "escapedName": "react-lifecycles-compat",
        "name": "react-lifecycles-compat",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/uneeb123/Documents/Coinbase/AddrAppCoinbase/node_modules/react-navigation"
    ]
  ],
  "_from": "react-lifecycles-compat@>=1.0.2 <2.0.0",
  "_id": "react-lifecycles-compat@1.1.4",
  "_inCache": true,
  "_location": "/react-lifecycles-compat",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-lifecycles-compat_1.1.4_1522777803733_0.14093477755474537"
  },
  "_npmUser": {
    "name": "brianvaughn",
    "email": "briandavidvaughn@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-lifecycles-compat@^1.0.2",
    "scope": null,
    "escapedName": "react-lifecycles-compat",
    "name": "react-lifecycles-compat",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-navigation"
  ],
  "_resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-1.1.4.tgz",
  "_shasum": "fc005c72849b7ed364de20a0f64ff58ebdc2009a",
  "_shrinkwrap": null,
  "_spec": "react-lifecycles-compat@^1.0.2",
  "_where": "/Users/uneeb123/Documents/Coinbase/AddrAppCoinbase/node_modules/react-navigation",
  "bugs": {
    "url": "https://github.com/reactjs/react-lifecycles-compat/issues"
  },
  "dependencies": {},
  "description": "Backwards compatibility polyfill for React class components",
  "devDependencies": {
    "camelcase": "^5.0.0",
    "chalk": "^2.3.0",
    "eslint": "^4.16.0",
    "eslint-config-es5": "^0.5.0",
    "jest": "^22.1.4",
    "jest-cli": "^22.1.4",
    "prettier": "^1.10.2",
    "rollup": "^0.57.1",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-uglify": "^3.0.0"
  },
  "devEngines": {
    "node": "8.5 || 9.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-g3pdexIqkn+CVvSpYIoyON8zUbF9kgfhp672gyz7wQ7PQyXVmJtah+GDYqpHpOrdwex3F77iv+alq79iux9HZw==",
    "shasum": "fc005c72849b7ed364de20a0f64ff58ebdc2009a",
    "tarball": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-1.1.4.tgz",
    "fileCount": 6,
    "unpackedSize": 15164
  },
  "files": [
    "react-lifecycles-compat.cjs.js",
    "react-lifecycles-compat.js",
    "react-lifecycles-compat.min.js"
  ],
  "gitHead": "33abd5a169b11b789232a2a50741a4571454eee4",
  "homepage": "https://github.com/reactjs/react-lifecycles-compat#readme",
  "license": "MIT",
  "main": "react-lifecycles-compat.cjs.js",
  "maintainers": [
    {
      "name": "acdlite",
      "email": "acdlite@me.com"
    },
    {
      "name": "brianvaughn",
      "email": "briandavidvaughn@gmail.com"
    },
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "flarnie",
      "email": "flarnie.npm@gmail.com"
    },
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    },
    {
      "name": "sophiebits",
      "email": "npm@sophiebits.com"
    },
    {
      "name": "trueadm",
      "email": "dg@domgan.com"
    }
  ],
  "name": "react-lifecycles-compat",
  "optionalDependencies": {},
  "readme": "# react-lifecycles-compat\n\n## What is this project?\n\nReact version 17 will deprecate several of the class component API lifecycles: `componentWillMount`, `componentWillReceiveProps`, and `componentWillUpdate`. (Read the [Update on Async rendering blog post](https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html) to learn more about why.) A couple of new lifecycles are also being added to better support [async rendering mode](https://reactjs.org/blog/2018/03/01/sneak-peek-beyond-react-16.html).\n\nTypically, this type of change would require third party libraries to release a new major version in order to adhere to semver. However, the `react-lifecycles-compat` polyfill offers a way to use the new lifecycles with older versions of React as well (0.14.9+) so no breaking release is required. This enables shared libraries to support both older and newer versions of React simultaneously.\n\n## How can I use the polyfill\n\nFirst, install the polyfill from NPM:\n```sh\n# Yarn\nyarn add react-lifecycles-compat\n\n# NPM\nnpm install react-lifecycles-compat --save\n```\n\nNext, update your component and replace any of the deprecated lifecycles with new ones introduced with React 16.3. (Refer to the React docs for [examples of how to use the new lifecycles](https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html).)\n\nLastly, use the polyfill to make the new lifecycles work with older versions of React:\n```js\nimport React from 'react';\nimport polyfill from 'react-lifecycles-compat';\n\nclass ExampleComponent extends React.Component {\n  // ...\n}\n\n// Polyfill your component so the new lifecycles will work with older versions of React:\npolyfill(ExampleComponent);\n\nexport default ExampleComponent;\n```\n\n## Which lifecycles are supported?\n\nCurrently, this polyfill supports [static `getDerivedStateFromProps`](https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops) and [`getSnapshotBeforeUpdate`](https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate)- both introduced in version 16.3.\n\n## Validation\n\nNote that in order for the polyfill to work, none of the following lifecycles can be defined by your component: `componentWillMount`, `componentWillReceiveProps`, or `componentWillUpdate`.\n\nNote also that if your component contains `getSnapshotBeforeUpdate`, `componentDidUpdate` must be defined as well.\n\nAn error will be thrown if any of the above conditions are not met.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactjs/react-lifecycles-compat.git"
  },
  "scripts": {
    "build": "rollup -c",
    "install:dependencies": "node install.js",
    "lint": "eslint index.js",
    "prepublish": "npm test",
    "pretest": "npm run install:dependencies && npm run build",
    "prettier": "prettier --write {index,test}.js",
    "test": "jest test.js"
  },
  "version": "1.1.4",
  "react-native": {
    "crypto": "react-native-crypto"
  },
  "browser": {
    "crypto": "react-native-crypto"
  }
}